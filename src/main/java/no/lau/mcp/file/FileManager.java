package no.lau.mcp.file;

import java.io.IOException;
import java.nio.file.Path;
import java.util.Map;

/**
 * Interface for managing file operations such as listing files, creating new files,
 * and managing video references.
 */
public interface FileManager {
    
    /**
     * Creates a new file with an auto-generated name in the destination folder.
     * @param videoRef The video reference identifier
     * @return The path to the newly created file
     * @throws IOException if an I/O error occurs
     */
    Path createNewFileWithAutoGeneratedNameInSecondFolder(String videoRef) throws IOException;

    /**
     * Lists all video references managed by this FileManager.
     * @return A map of video reference IDs to their paths
     */
    Map<String, Path> listVideoReferences();

    /**
     * Replace video references in the command with their actual paths.
     * @param command The command with potential {{videoref}} placeholders
     * @return The command with resolved video references
     */
    String replaceVideoReferences(String command);
    
    /**
     * Gets the map of target video references.
     * @return The map of target video references
     */
    Map<String, Path> getTargetVideoReferences();
    
    /**
     * Adds or updates a target video reference.
     * @param id The video reference ID
     * @param path The path to the video file
     */
    void addTargetVideoReference(String id, Path path);
}
